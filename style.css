Step 1: Test the Complete Chain
bash
# 1. Test the route directly from outside
curl -v -H "Host: data-index-sonataflow-infra.apps.your-cluster.com" \
  http://router.openshift-ingress.svc.cluster.local \
  --resolve "data-index-sonataflow-infra.apps.your-cluster.com:80:$(oc get svc router-default -n openshift-ingress -o jsonpath='{.spec.clusterIP}')"

# 2. Test from inside the cluster through the route
oc run route-test --image=curlimages/curl -i --rm --restart=Never -- \
  curl -v http://sonataflow-data-index-sonataflow-infra.apps.your-cluster.com/graphql

# 3. Check what the router sees
oc logs -n openshift-ingress deployment/router-default --tail=100 | grep sonataflow-data-index
Step 2: Check Service Account and Security
bash
# Check if the service account has proper permissions
oc describe serviceaccount default -n sonataflow-infra

# Check security context constraints
oc get pod -n sonataflow-infra -l app.kubernetes.io/name=data-index-service -o yaml | grep -A10 securityContext

# Check if any admission webhooks are blocking
oc get validatingwebhookconfiguration,mutatingwebhookconfiguration | grep -i route
Step 3: Router to Service Connectivity
bash
# Test from router namespace to your service
oc run router-side-test --image=nicolaka/netshoot -n openshift-ingress -i --rm --restart=Never -- \
  /bin/bash -c "curl -v http://sonataflow-platform-data-index-service.sonataflow-infra.svc.cluster.local:80/health"

# Check if the service is reachable from router pods
ROUTER_POD=$(oc get pods -n openshift-ingress -l ingresscontroller.operator.openshift.io/deployment-ingresscontroller=default -o jsonpath='{.items[0].metadata.name}')
oc exec -n openshift-ingress $ROUTER_POD -- \
  curl -s http://sonataflow-platform-data-index-service.sonataflow-infra.svc.cluster.local:80/health
